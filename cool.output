Terminals unused in grammar

   ASSIGN
   ERROR


Rules useless in parser due to conflicts

   23 expr: OBJECTID '(' expr_list ')'


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 46 conflicts: 14 shift/reduce
State 51 conflicts: 1 shift/reduce
State 61 conflicts: 8 shift/reduce
State 63 conflicts: 14 shift/reduce
State 64 conflicts: 8 shift/reduce
State 68 conflicts: 8 shift/reduce
State 84 conflicts: 8 shift/reduce
State 89 conflicts: 8 shift/reduce
State 91 conflicts: 8 shift/reduce
State 92 conflicts: 8 shift/reduce
State 93 conflicts: 8 shift/reduce
State 94 conflicts: 8 shift/reduce
State 95 conflicts: 8 shift/reduce
State 96 conflicts: 8 shift/reduce
State 103 conflicts: 31 reduce/reduce
State 104 conflicts: 14 shift/reduce
State 113 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID ':' TYPEID
   10        | OBJECTID ':' TYPEID DARROW expr
   11        | OBJECTID '(' ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'

   13 formal_list: /* empty */
   14            | formal
   15            | formal_list ',' formal

   16 formal: OBJECTID ':' TYPEID

   17 expr_list: /* empty */
   18          | expr
   19          | expr_list expr

   20 expr: OBJECTID DARROW expr
   21     | OBJECTID '(' expr_list ')'
   22     | expr '.' OBJECTID '(' expr_list ')'
   23     | OBJECTID '(' expr_list ')'
   24     | IF expr THEN expr ELSE expr FI
   25     | WHILE expr LOOP expr POOL
   26     | '{' expr_list '}'
   27     | LET OBJECTID ':' TYPEID IN expr
   28     | case_list
   29     | NEW TYPEID
   30     | ISVOID expr
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr
   35     | '~' expr
   36     | expr '<' expr
   37     | expr '=' expr
   38     | expr LE expr
   39     | NOT expr
   40     | '(' expr ')'
   41     | OBJECTID
   42     | INT_CONST
   43     | STR_CONST
   44     | BOOL_CONST

   45 case_list: case
   46          | case case_list

   47 case: CASE expr OF ESAC


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 12 21 22 23 40
')' (41) 11 12 21 22 23 40
'*' (42) 33
'+' (43) 31
',' (44) 15
'-' (45) 32
'.' (46) 22
'/' (47) 34
':' (58) 9 10 11 12 16 27
';' (59) 4 5 7 8
'<' (60) 36
'=' (61) 37
'{' (123) 4 5 11 12 26
'}' (125) 4 5 11 12 26
'~' (126) 35
error (256)
CLASS (258) 4 5
ELSE (259) 24
FI (260) 24
IF (261) 24
IN (262) 27
INHERITS (263) 5
LET (264) 27
LOOP (265) 25
POOL (266) 25
THEN (267) 24
WHILE (268) 25
CASE (269) 47
ESAC (270) 47
OF (271) 47
DARROW (272) 10 20
NEW (273) 29
ISVOID (274) 30
STR_CONST (275) 43
INT_CONST (276) 42
BOOL_CONST (277) 44
TYPEID (278) 4 5 9 10 11 12 16 27 29
OBJECTID (279) 9 10 11 12 16 20 21 22 23 27 41
ASSIGN (280)
NOT (281) 39
LE (282) 38
ERROR (283)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
class_list (46)
    on left: 2 3, on right: 1 3
class (47)
    on left: 4 5, on right: 2 3
feature_list (48)
    on left: 6 7 8, on right: 4 5 8
feature (49)
    on left: 9 10 11 12, on right: 7 8
formal_list (50)
    on left: 13 14 15, on right: 12 15
formal (51)
    on left: 16, on right: 14 15
expr_list (52)
    on left: 17 18 19, on right: 19 21 22 23 26
expr (53)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43 44, on right: 10 11 12 18 19 20 22 24 25 27 30
    31 32 33 34 35 36 37 38 39 40 47
case_list (54)
    on left: 45 46, on right: 28 46
case (55)
    on left: 47, on right: 45 46


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . ':' TYPEID
   10        | OBJECTID . ':' TYPEID DARROW expr
   11        | OBJECTID . '(' ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 15
    '('  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature . ';'

    ';'  shift, and go to state 19


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 20
    feature       go to state 13


state 15

    9 feature: OBJECTID ':' . TYPEID
   10        | OBJECTID ':' . TYPEID DARROW expr

    TYPEID  shift, and go to state 21


state 16

   11 feature: OBJECTID '(' . ')' ':' TYPEID '{' expr '}'
   12        | OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 22
    ')'       shift, and go to state 23

    ')'       [reduce using rule 13 (formal_list)]
    $default  reduce using rule 13 (formal_list)

    formal_list  go to state 24
    formal       go to state 25


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 26


state 18

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 27


state 19

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 28

    feature  go to state 18


state 21

    9 feature: OBJECTID ':' TYPEID .
   10        | OBJECTID ':' TYPEID . DARROW expr

    DARROW  shift, and go to state 29

    $default  reduce using rule 9 (feature)


state 22

   16 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 30


state 23

   11 feature: OBJECTID '(' ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 31


state 24

   12 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   15 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 32
    ','  shift, and go to state 33


state 25

   14 formal_list: formal .

    $default  reduce using rule 14 (formal_list)


state 26

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 27

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


state 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 34


state 29

   10 feature: OBJECTID ':' TYPEID DARROW . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 49
    case_list  go to state 50
    case       go to state 51


state 30

   16 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 52


state 31

   11 feature: OBJECTID '(' ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 53


state 32

   12 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 54


state 33

   15 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 22

    formal  go to state 55


state 34

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 35

   24 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 56
    case_list  go to state 50
    case       go to state 51


state 36

   27 expr: LET . OBJECTID ':' TYPEID IN expr

    OBJECTID  shift, and go to state 57


state 37

   25 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 58
    case_list  go to state 50
    case       go to state 51


state 38

   47 case: CASE . expr OF ESAC

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 59
    case_list  go to state 50
    case       go to state 51


state 39

   29 expr: NEW . TYPEID

    TYPEID  shift, and go to state 60


state 40

   30 expr: ISVOID . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 61
    case_list  go to state 50
    case       go to state 51


state 41

   43 expr: STR_CONST .

    $default  reduce using rule 43 (expr)


state 42

   42 expr: INT_CONST .

    $default  reduce using rule 42 (expr)


state 43

   44 expr: BOOL_CONST .

    $default  reduce using rule 44 (expr)


state 44

   20 expr: OBJECTID . DARROW expr
   21     | OBJECTID . '(' expr_list ')'
   23     | OBJECTID . '(' expr_list ')'
   41     | OBJECTID .

    DARROW  shift, and go to state 62
    '('     shift, and go to state 63

    '('       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


state 45

   39 expr: NOT . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 64
    case_list  go to state 50
    case       go to state 51


state 46

   26 expr: '{' . expr_list '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    IF          [reduce using rule 17 (expr_list)]
    LET         [reduce using rule 17 (expr_list)]
    WHILE       [reduce using rule 17 (expr_list)]
    CASE        [reduce using rule 17 (expr_list)]
    NEW         [reduce using rule 17 (expr_list)]
    ISVOID      [reduce using rule 17 (expr_list)]
    STR_CONST   [reduce using rule 17 (expr_list)]
    INT_CONST   [reduce using rule 17 (expr_list)]
    BOOL_CONST  [reduce using rule 17 (expr_list)]
    OBJECTID    [reduce using rule 17 (expr_list)]
    NOT         [reduce using rule 17 (expr_list)]
    '{'         [reduce using rule 17 (expr_list)]
    '('         [reduce using rule 17 (expr_list)]
    '~'         [reduce using rule 17 (expr_list)]
    $default    reduce using rule 17 (expr_list)

    expr_list  go to state 65
    expr       go to state 66
    case_list  go to state 50
    case       go to state 51


state 47

   40 expr: '(' . expr ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 67
    case_list  go to state 50
    case       go to state 51


state 48

   35 expr: '~' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 68
    case_list  go to state 50
    case       go to state 51


state 49

   10 feature: OBJECTID ':' TYPEID DARROW expr .
   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    $default  reduce using rule 10 (feature)


state 50

   28 expr: case_list .

    $default  reduce using rule 28 (expr)


state 51

   45 case_list: case .
   46          | case . case_list

    CASE  shift, and go to state 38

    CASE      [reduce using rule 45 (case_list)]
    $default  reduce using rule 45 (case_list)

    case_list  go to state 77
    case       go to state 51


state 52

   16 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 16 (formal)


state 53

   11 feature: OBJECTID '(' ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 78


state 54

   12 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 79


state 55

   15 formal_list: formal_list ',' formal .

    $default  reduce using rule 15 (formal_list)


state 56

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   24     | IF expr . THEN expr ELSE expr FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    THEN  shift, and go to state 80
    LE    shift, and go to state 69
    '.'   shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72
    '*'   shift, and go to state 73
    '/'   shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76


state 57

   27 expr: LET OBJECTID . ':' TYPEID IN expr

    ':'  shift, and go to state 81


state 58

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   25     | WHILE expr . LOOP expr POOL
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LOOP  shift, and go to state 82
    LE    shift, and go to state 69
    '.'   shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72
    '*'   shift, and go to state 73
    '/'   shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76


state 59

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr
   47 case: CASE expr . OF ESAC

    OF   shift, and go to state 83
    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76


state 60

   29 expr: NEW TYPEID .

    $default  reduce using rule 29 (expr)


state 61

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   30     | ISVOID expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 30 (expr)]
    '.'       [reduce using rule 30 (expr)]
    '+'       [reduce using rule 30 (expr)]
    '-'       [reduce using rule 30 (expr)]
    '*'       [reduce using rule 30 (expr)]
    '/'       [reduce using rule 30 (expr)]
    '<'       [reduce using rule 30 (expr)]
    '='       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


state 62

   20 expr: OBJECTID DARROW . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 84
    case_list  go to state 50
    case       go to state 51


state 63

   21 expr: OBJECTID '(' . expr_list ')'
   23     | OBJECTID '(' . expr_list ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    IF          [reduce using rule 17 (expr_list)]
    LET         [reduce using rule 17 (expr_list)]
    WHILE       [reduce using rule 17 (expr_list)]
    CASE        [reduce using rule 17 (expr_list)]
    NEW         [reduce using rule 17 (expr_list)]
    ISVOID      [reduce using rule 17 (expr_list)]
    STR_CONST   [reduce using rule 17 (expr_list)]
    INT_CONST   [reduce using rule 17 (expr_list)]
    BOOL_CONST  [reduce using rule 17 (expr_list)]
    OBJECTID    [reduce using rule 17 (expr_list)]
    NOT         [reduce using rule 17 (expr_list)]
    '{'         [reduce using rule 17 (expr_list)]
    '('         [reduce using rule 17 (expr_list)]
    '~'         [reduce using rule 17 (expr_list)]
    $default    reduce using rule 17 (expr_list)

    expr_list  go to state 85
    expr       go to state 66
    case_list  go to state 50
    case       go to state 51


state 64

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr
   39     | NOT expr .

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 39 (expr)]
    '.'       [reduce using rule 39 (expr)]
    '+'       [reduce using rule 39 (expr)]
    '-'       [reduce using rule 39 (expr)]
    '*'       [reduce using rule 39 (expr)]
    '/'       [reduce using rule 39 (expr)]
    '<'       [reduce using rule 39 (expr)]
    '='       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 65

   19 expr_list: expr_list . expr
   26 expr: '{' expr_list . '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '}'         shift, and go to state 86
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 87
    case_list  go to state 50
    case       go to state 51


state 66

   18 expr_list: expr .
   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    $default  reduce using rule 18 (expr_list)


state 67

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr
   40     | '(' expr . ')'

    LE   shift, and go to state 69
    ')'  shift, and go to state 88
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76


state 68

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | '~' expr .
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 35 (expr)]
    '.'       [reduce using rule 35 (expr)]
    '+'       [reduce using rule 35 (expr)]
    '-'       [reduce using rule 35 (expr)]
    '*'       [reduce using rule 35 (expr)]
    '/'       [reduce using rule 35 (expr)]
    '<'       [reduce using rule 35 (expr)]
    '='       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


state 69

   38 expr: expr LE . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 89
    case_list  go to state 50
    case       go to state 51


state 70

   22 expr: expr '.' . OBJECTID '(' expr_list ')'

    OBJECTID  shift, and go to state 90


state 71

   31 expr: expr '+' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 91
    case_list  go to state 50
    case       go to state 51


state 72

   32 expr: expr '-' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 92
    case_list  go to state 50
    case       go to state 51


state 73

   33 expr: expr '*' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 93
    case_list  go to state 50
    case       go to state 51


state 74

   34 expr: expr '/' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 94
    case_list  go to state 50
    case       go to state 51


state 75

   36 expr: expr '<' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 95
    case_list  go to state 50
    case       go to state 51


state 76

   37 expr: expr '=' . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 96
    case_list  go to state 50
    case       go to state 51


state 77

   46 case_list: case case_list .

    $default  reduce using rule 46 (case_list)


state 78

   11 feature: OBJECTID '(' ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 97
    case_list  go to state 50
    case       go to state 51


state 79

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 98


state 80

   24 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 99
    case_list  go to state 50
    case       go to state 51


state 81

   27 expr: LET OBJECTID ':' . TYPEID IN expr

    TYPEID  shift, and go to state 100


state 82

   25 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 101
    case_list  go to state 50
    case       go to state 51


state 83

   47 case: CASE expr OF . ESAC

    ESAC  shift, and go to state 102


state 84

   20 expr: OBJECTID DARROW expr .
   22     | expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 20 (expr)]
    '.'       [reduce using rule 20 (expr)]
    '+'       [reduce using rule 20 (expr)]
    '-'       [reduce using rule 20 (expr)]
    '*'       [reduce using rule 20 (expr)]
    '/'       [reduce using rule 20 (expr)]
    '<'       [reduce using rule 20 (expr)]
    '='       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 85

   19 expr_list: expr_list . expr
   21 expr: OBJECTID '(' expr_list . ')'
   23     | OBJECTID '(' expr_list . ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    ')'         shift, and go to state 103
    '~'         shift, and go to state 48

    expr       go to state 87
    case_list  go to state 50
    case       go to state 51


state 86

   26 expr: '{' expr_list '}' .

    $default  reduce using rule 26 (expr)


state 87

   19 expr_list: expr_list expr .
   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    $default  reduce using rule 19 (expr_list)


state 88

   40 expr: '(' expr ')' .

    $default  reduce using rule 40 (expr)


state 89

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr
   38     | expr LE expr .

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 38 (expr)]
    '.'       [reduce using rule 38 (expr)]
    '+'       [reduce using rule 38 (expr)]
    '-'       [reduce using rule 38 (expr)]
    '*'       [reduce using rule 38 (expr)]
    '/'       [reduce using rule 38 (expr)]
    '<'       [reduce using rule 38 (expr)]
    '='       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 90

   22 expr: expr '.' OBJECTID . '(' expr_list ')'

    '('  shift, and go to state 104


state 91

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 31 (expr)]
    '.'       [reduce using rule 31 (expr)]
    '+'       [reduce using rule 31 (expr)]
    '-'       [reduce using rule 31 (expr)]
    '*'       [reduce using rule 31 (expr)]
    '/'       [reduce using rule 31 (expr)]
    '<'       [reduce using rule 31 (expr)]
    '='       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


state 92

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 32 (expr)]
    '.'       [reduce using rule 32 (expr)]
    '+'       [reduce using rule 32 (expr)]
    '-'       [reduce using rule 32 (expr)]
    '*'       [reduce using rule 32 (expr)]
    '/'       [reduce using rule 32 (expr)]
    '<'       [reduce using rule 32 (expr)]
    '='       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 93

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 33 (expr)]
    '.'       [reduce using rule 33 (expr)]
    '+'       [reduce using rule 33 (expr)]
    '-'       [reduce using rule 33 (expr)]
    '*'       [reduce using rule 33 (expr)]
    '/'       [reduce using rule 33 (expr)]
    '<'       [reduce using rule 33 (expr)]
    '='       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


state 94

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 34 (expr)]
    '.'       [reduce using rule 34 (expr)]
    '+'       [reduce using rule 34 (expr)]
    '-'       [reduce using rule 34 (expr)]
    '*'       [reduce using rule 34 (expr)]
    '/'       [reduce using rule 34 (expr)]
    '<'       [reduce using rule 34 (expr)]
    '='       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 95

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   36     | expr '<' expr .
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 36 (expr)]
    '.'       [reduce using rule 36 (expr)]
    '+'       [reduce using rule 36 (expr)]
    '-'       [reduce using rule 36 (expr)]
    '*'       [reduce using rule 36 (expr)]
    '/'       [reduce using rule 36 (expr)]
    '<'       [reduce using rule 36 (expr)]
    '='       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


state 96

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   37     | expr '=' expr .
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 37 (expr)]
    '.'       [reduce using rule 37 (expr)]
    '+'       [reduce using rule 37 (expr)]
    '-'       [reduce using rule 37 (expr)]
    '*'       [reduce using rule 37 (expr)]
    '/'       [reduce using rule 37 (expr)]
    '<'       [reduce using rule 37 (expr)]
    '='       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 97

   11 feature: OBJECTID '(' ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '}'  shift, and go to state 105
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76


state 98

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 106
    case_list  go to state 50
    case       go to state 51


state 99

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   24     | IF expr THEN expr . ELSE expr FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    ELSE  shift, and go to state 107
    LE    shift, and go to state 69
    '.'   shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72
    '*'   shift, and go to state 73
    '/'   shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76


state 100

   27 expr: LET OBJECTID ':' TYPEID . IN expr

    IN  shift, and go to state 108


state 101

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   25     | WHILE expr LOOP expr . POOL
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    POOL  shift, and go to state 109
    LE    shift, and go to state 69
    '.'   shift, and go to state 70
    '+'   shift, and go to state 71
    '-'   shift, and go to state 72
    '*'   shift, and go to state 73
    '/'   shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76


state 102

   47 case: CASE expr OF ESAC .

    $default  reduce using rule 47 (case)


state 103

   21 expr: OBJECTID '(' expr_list ')' .
   23     | OBJECTID '(' expr_list ')' .

    ELSE        reduce using rule 21 (expr)
    ELSE        [reduce using rule 23 (expr)]
    FI          reduce using rule 21 (expr)
    FI          [reduce using rule 23 (expr)]
    IF          reduce using rule 21 (expr)
    IF          [reduce using rule 23 (expr)]
    LET         reduce using rule 21 (expr)
    LET         [reduce using rule 23 (expr)]
    LOOP        reduce using rule 21 (expr)
    LOOP        [reduce using rule 23 (expr)]
    POOL        reduce using rule 21 (expr)
    POOL        [reduce using rule 23 (expr)]
    THEN        reduce using rule 21 (expr)
    THEN        [reduce using rule 23 (expr)]
    WHILE       reduce using rule 21 (expr)
    WHILE       [reduce using rule 23 (expr)]
    CASE        reduce using rule 21 (expr)
    CASE        [reduce using rule 23 (expr)]
    OF          reduce using rule 21 (expr)
    OF          [reduce using rule 23 (expr)]
    NEW         reduce using rule 21 (expr)
    NEW         [reduce using rule 23 (expr)]
    ISVOID      reduce using rule 21 (expr)
    ISVOID      [reduce using rule 23 (expr)]
    STR_CONST   reduce using rule 21 (expr)
    STR_CONST   [reduce using rule 23 (expr)]
    INT_CONST   reduce using rule 21 (expr)
    INT_CONST   [reduce using rule 23 (expr)]
    BOOL_CONST  reduce using rule 21 (expr)
    BOOL_CONST  [reduce using rule 23 (expr)]
    OBJECTID    reduce using rule 21 (expr)
    OBJECTID    [reduce using rule 23 (expr)]
    NOT         reduce using rule 21 (expr)
    NOT         [reduce using rule 23 (expr)]
    LE          reduce using rule 21 (expr)
    LE          [reduce using rule 23 (expr)]
    '{'         reduce using rule 21 (expr)
    '{'         [reduce using rule 23 (expr)]
    '}'         reduce using rule 21 (expr)
    '}'         [reduce using rule 23 (expr)]
    ';'         reduce using rule 21 (expr)
    ';'         [reduce using rule 23 (expr)]
    '('         reduce using rule 21 (expr)
    '('         [reduce using rule 23 (expr)]
    ')'         reduce using rule 21 (expr)
    ')'         [reduce using rule 23 (expr)]
    '.'         reduce using rule 21 (expr)
    '.'         [reduce using rule 23 (expr)]
    '+'         reduce using rule 21 (expr)
    '+'         [reduce using rule 23 (expr)]
    '-'         reduce using rule 21 (expr)
    '-'         [reduce using rule 23 (expr)]
    '*'         reduce using rule 21 (expr)
    '*'         [reduce using rule 23 (expr)]
    '/'         reduce using rule 21 (expr)
    '/'         [reduce using rule 23 (expr)]
    '~'         reduce using rule 21 (expr)
    '~'         [reduce using rule 23 (expr)]
    '<'         reduce using rule 21 (expr)
    '<'         [reduce using rule 23 (expr)]
    '='         reduce using rule 21 (expr)
    '='         [reduce using rule 23 (expr)]
    $default    reduce using rule 21 (expr)


state 104

   22 expr: expr '.' OBJECTID '(' . expr_list ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    IF          [reduce using rule 17 (expr_list)]
    LET         [reduce using rule 17 (expr_list)]
    WHILE       [reduce using rule 17 (expr_list)]
    CASE        [reduce using rule 17 (expr_list)]
    NEW         [reduce using rule 17 (expr_list)]
    ISVOID      [reduce using rule 17 (expr_list)]
    STR_CONST   [reduce using rule 17 (expr_list)]
    INT_CONST   [reduce using rule 17 (expr_list)]
    BOOL_CONST  [reduce using rule 17 (expr_list)]
    OBJECTID    [reduce using rule 17 (expr_list)]
    NOT         [reduce using rule 17 (expr_list)]
    '{'         [reduce using rule 17 (expr_list)]
    '('         [reduce using rule 17 (expr_list)]
    '~'         [reduce using rule 17 (expr_list)]
    $default    reduce using rule 17 (expr_list)

    expr_list  go to state 110
    expr       go to state 66
    case_list  go to state 50
    case       go to state 51


state 105

   11 feature: OBJECTID '(' ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 11 (feature)


state 106

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '}'  shift, and go to state 111
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76


state 107

   24 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 112
    case_list  go to state 50
    case       go to state 51


state 108

   27 expr: LET OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    '~'         shift, and go to state 48

    expr       go to state 113
    case_list  go to state 50
    case       go to state 51


state 109

   25 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 25 (expr)


state 110

   19 expr_list: expr_list . expr
   22 expr: expr '.' OBJECTID '(' expr_list . ')'

    IF          shift, and go to state 35
    LET         shift, and go to state 36
    WHILE       shift, and go to state 37
    CASE        shift, and go to state 38
    NEW         shift, and go to state 39
    ISVOID      shift, and go to state 40
    STR_CONST   shift, and go to state 41
    INT_CONST   shift, and go to state 42
    BOOL_CONST  shift, and go to state 43
    OBJECTID    shift, and go to state 44
    NOT         shift, and go to state 45
    '{'         shift, and go to state 46
    '('         shift, and go to state 47
    ')'         shift, and go to state 114
    '~'         shift, and go to state 48

    expr       go to state 87
    case_list  go to state 50
    case       go to state 51


state 111

   12 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 12 (feature)


state 112

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   24     | IF expr THEN expr ELSE expr . FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    FI   shift, and go to state 115
    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76


state 113

   22 expr: expr . '.' OBJECTID '(' expr_list ')'
   27     | LET OBJECTID ':' TYPEID IN expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . '=' expr
   38     | expr . LE expr

    LE   shift, and go to state 69
    '.'  shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76

    LE        [reduce using rule 27 (expr)]
    '.'       [reduce using rule 27 (expr)]
    '+'       [reduce using rule 27 (expr)]
    '-'       [reduce using rule 27 (expr)]
    '*'       [reduce using rule 27 (expr)]
    '/'       [reduce using rule 27 (expr)]
    '<'       [reduce using rule 27 (expr)]
    '='       [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


state 114

   22 expr: expr '.' OBJECTID '(' expr_list ')' .

    $default  reduce using rule 22 (expr)


state 115

   24 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 24 (expr)
